stages:
  - build
  - test
  - deploy
  - build_docker
  - push_docker

build_job:
  stage: build
  variables:
    IIS_VERSION_SUFFIX: $CI_PIPELINE_ID
  script:
    - export IIS_SOURCE_REVISION_ID=$PRODUCT_VERSION.$CI_PIPELINE_ID
    - dotnet publish src/Iis.Api/Iis.Api.csproj -c Release -o publish/core
    - env
  artifacts:
    paths:
      - publish
    expire_in: 1 month
  tags:
    - ci
  # only:
  #   - master
  #   - /^v.+$/
  #   - /^sprint\..+$/
  #   - /^Release_*/

unit_test:
  stage: test
  script:
    - dotnet test --test-adapter-path:. --logger:"junit;LogFilePath=../../{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose" src/Iis.UnitTests/Iis.UnitTests.csproj
  artifacts:
    when: always
    paths:
      - ./*test-result.xml
    reports:
      junit:
        - ./*test-result.xml
  allow_failure: true
  tags:
    - ci
  # only:
  #   - master
  #   - /^v.+$/
  #   - /^sprint\..+$/
  #   - /^Release_*/


.deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
    GIT_CHECKOUT: "false"
    EXTRA_VARS: "artifacts_path=$CI_PROJECT_DIR"
  script:
    - cd /home/gitlab-runner/ansible
    - echo "Deploying IIS API using ./vars/$DEPLOYMENT_FILE and extra-vars='$EXTRA_VARS'"
    - ansible-playbook app_api_net.yml -e "@./vars/$DEPLOYMENT_FILE" -e "$EXTRA_VARS"
    - rm -rf $CI_PROJECT_DIR/*
  tags:
    - ansible
  only:
    - /^v.+$/
    - /^sprint\..+$/
    - /^Release_*/
    - master
    - develop
    - /^rc-*/
    - /^release-*/
    - /^hotfix*/

.deploy_contour_dev:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: dev_con.yml
  environment:
    name: dev_contour
    url: http://contour-dev-01.contour.net

.deploy_contour_dev2:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: dev2_con.yml
  environment:
    name: dev2_contour
    url: http://dev2.contour.net

.deploy_od_dev:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: dev_od.yml
  environment:
    name: dev_odysseus
    url: http://od-dev.contour.net


deploy_contour_dev_auto:
  extends: .deploy_contour_dev
  only:
    - /^Release_*/
    - master
    - develop

deploy_od_dev:
  extends: .deploy_od_dev
  only:
    - /^Release_*/
    - master
    - develop

deploy_contour_dev_manual:
  extends: .deploy_contour_dev
  when: manual

deploy_contour_dev2_manual:
  extends: .deploy_contour_dev2
  when: manual

deploy_od_dev_manual:
  extends: .deploy_od_dev
  when: manual


deploy_contour_qa:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: qa_con.yml
##    EXTRA_VARS: "tag_name=$CI_COMMIT_TAG ontology_clear='$ONTOLOGY_CLEAR'"
  environment:
    name: qa_contour
    url: http://qa-app.contour.net
  when: manual


deploy_od_qa:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: qa_od.yml
##    EXTRA_VARS: "tag_name=$CI_COMMIT_TAG ontology_clear='$ONTOLOGY_CLEAR'"
  environment:
    name: qa_odysseus
    url: http://qa-app.odysseus.lcl
  when: manual

deploy_contour_demo:
  extends: .deploy
  variables:
    DEPLOYMENT_FILE: demo_con.yml
  environment:
    name: demo_contour
    url: http://demo.contour.net
  when: manual



### Docker ###
variables:
  DOCKER_REGISTRY: "docker.contour.net:5000"
  DOCKER_IMAGE_NAME: "iis-core"


build_docker:
  stage: build_docker
  script:
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  tags:
    - docker

push docker(master):
  variables:
    GIT_STRATEGY: none
  stage: push_docker
  only:
    - master
  script:
    - docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:master
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:master
  tags:
    - docker

push docker(latest):
  variables:
    GIT_STRATEGY: none
  stage: push_docker
  only:
    - develop
  script:
    - docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest
  tags:
    - docker


push docker(tag):
  variables:
    GIT_STRATEGY: none
  stage: push_docker
  only:
    - tags
  script:
    - docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME
  tags:
    - docker